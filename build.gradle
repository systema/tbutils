/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.7/samples
 */
plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.10'
    id 'maven-publish'
}


group 'com.systema.eia.iot'
version '2.0.2'


repositories {
    mavenCentral()
    maven {
        url "https://repo.thingsboard.io/artifactory/libs-release-public"
    }
}


dependencies {
    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    compile "org.thingsboard:rest-client:3.2.2"
    compile 'org.slf4j:slf4j-simple:1.7.36'

    compile "org.jetbrains.kotlin:kotlin-stdlib"
    compile 'io.github.microutils:kotlin-logging-jvm:2.1.21'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0'
    compile 'com.github.ajalt:clikt:2.8.0'

    compile 'org.java-websocket:Java-WebSocket:1.5.2'
//    compile "com.github.holgerbrandl:jsonbuilder:0.9"
    compile 'org.json:json:20211205'

    // junit
    testCompile 'io.kotest:kotest-assertions-core:5.1.0'
    // https://junit.org/junit5/docs/current/user-guide/#running-tests-build-gradle-engines-configure
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.8.2',
            'org.junit.jupiter:junit-jupiter-params:5.8.2'
    )
    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.1.1'
    testCompileOnly('junit:junit:4.13.2')
    testRuntimeOnly(
        'org.junit.jupiter:junit-jupiter-engine:5.8.2',
        'org.junit.vintage:junit-vintage-engine:5.8.2'
    )
    testImplementation "org.jetbrains.kotlin:kotlin-script-runtime:1.6.10"
}



test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/systema/tbutils")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GH_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
